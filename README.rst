s2i-thoth
---------

.. |s2i-thoth-ubi8-py39 on Quay| image:: https://quay.io/repository/thoth-station/s2i-thoth-ubi8-py39/status

.. |s2i-thoth-ubi8-py38 on Quay| image:: https://quay.io/repository/thoth-station/s2i-thoth-ubi8-py38/status

.. |s2i-thoth-ubi8-py36 on Quay| image:: https://quay.io/repository/thoth-station/s2i-thoth-ubi8-py36/status

.. |s2i-thoth-f34-py39 on Quay| image:: https://quay.io/repository/thoth-station/s2i-thoth-f34-py39/status

Experimental Thoth container images:

* `quay.io/thoth-station/s2i-thoth-ubi8-py39 <https://quay.io/repository/thoth-station/s2i-thoth-ubi8-py39>`_ |s2i-thoth-ubi8-py39 on Quay|

* `quay.io/thoth-station/s2i-thoth-ubi8-py38 <https://quay.io/repository/thoth-station/s2i-thoth-ubi8-py38>`_ |s2i-thoth-ubi8-py38 on Quay|

* `quay.io/thoth-station/s2i-thoth-ubi8-py36 <https://quay.io/repository/thoth-station/s2i-thoth-ubi8-py36>`_ |s2i-thoth-ubi8-py36 on Quay|

* `quay.io/thoth-station/s2i-thoth-f34-py39 <https://quay.io/repository/thoth-station/s2i-thoth-f34-py39>`_ |s2i-thoth-f34-py39 on Quay|

Artifacts needed to build `s2i-thoth-*` container images.

These container images are complaint with OpenShift's s2i build process to
build Python applications. They extend the functionality of base s2i Python
container images so that applications using these container images benefit from
Thoth's recommendations.

See `thoth-station/s2i-example
<https://github.com/thoth-station/s2i-example>`__ repository with OpenShift s2i
examples.

**Note:** When using Thoth S2I build process, it is required to use
``.thoth.yaml`` file even if all the Thoth features are turned off. A simple
``.thoth.yaml`` file as generated by ``thamos config`` should work in
most cases (see `thamos repository <https://github.com/thoth-station/thamos>`__
for more info).

Configuration options
=====================

Configuration options for Thoth's s2i image:

* ``THOTH_ADVISE`` - always use the recommended stack by Thoth (even if the lock file is present in the repo)
* ``THOTH_OFF`` - disable all the Thoth features, only ``THOTH_FORCE_GENERATE_CONFIG`` can be supplied if ``.thoth.yaml`` is not available
* ``THOTH_CONFIG_CHECK`` - verify values stated in the configuration file match the build environment
* ``THOTH_FORCE_GENERATE_CONFIG`` - generate configuration file during the build process, overwrites already existing configuration file if present
* ``THOTH_PROVENANCE_CHECK`` - verify stack provenance - the provenance check is triggered only if the lock file is not comming from Thoth's recommendation engine (otherwise the stack has already verified provenance)
* ``THOTH_ASSEMBLE_DEBUG`` - run s2i's assemble script in verbose mode
* ``THOTH_DRY_RUN`` - submit stack to Thoth's recommendation engine but do **NOT** use the recommended lock file, use the lock file present in the repo instead
* ``THOTH_FROM_MASTER`` - Use Thamos from git instead of a PyPI release - handy if the released Thamos has a bug which was fixed in the master branch
* ``THOTH_HOST`` - Thoth's host to reach out to for recommendations (defaults to prod deployment at khemenu.thoth-station.ninja)
* ``THOTH_ERROR_FALLBACK`` - fallback to the lock file present in the repository if the submitted Thoth analysis fails

See also configuration options for Thoth's client present in `Thamos repository
<https://github.com/thoth-station/thamos/#using-thoth-and-thamos-in-openshifts-s2i>`_.

Building container images
=========================

Container images are automatically built in quay.io when pushed to master branch.

Building container images locally
=================================

If you wish to build container images locally, you can do so (an example for
``ubi8-py39``):

.. code-block:: console

  podman build -f ubi8-py39/Dockerfile

Updating the dependencies
=========================

This script can be used for updating the requirements for each of the environments.

Execute command: `./update-requirements.sh <sub-directories>`

Example: `./update-requirements.sh ubi8-py39 f34-py39`

Prerequisite: Pipenv, micropipenv and different Python interpreter versions

Updating and releasing new container images
===========================================

This repository is managed by `Kebechet
<https://github.com/thoth-station/kebechet/>`__ so updates of all the Python
packages it uses are performed automatically. If you wish to release a new
version of Thoth's s2i, you can do so by performing:

.. code-block:: console

  find -iname Dockerfile -exec sed -i 's/THOTH_S2I_VERSION=0.23.0/THOTH_S2I_VERSION=0.24.0/g' {} \; && git commit -m "Version 0.24.0" . && git tag v0.24.0

A subsequent pull request to this repository is needed.

Importing image into OpenShift's registry
=========================================

.. code-block:: console

  oc import-image quay.io/thoth-station/s2i-thoth-ubi8-py39 -n <your-namespace>
  oc import-image quay.io/thoth-station/s2i-thoth-f34-py39 -n <your-namespace>
